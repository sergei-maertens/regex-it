---

- name: Set up Zabbix for monitoring
  hosts: monitoring
  remote_user: root

  vars:
    # certbot vars
    certbot_admin_email: info@regex-it.nl
    certbot_create_if_missing: true
    certbot_create_standalone_stop_services: []
    # certbot_create_standalone_stop_services: ['nginx']
    certbot_certs:
      - domains:
        - zabbix.regex-it.nl

    # nginx vars
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        port: 443
        ssl:
          cert: /etc/letsencrypt/live/zabbix.regex-it.nl/fullchain.pem
          key: /etc/letsencrypt/live/zabbix.regex-it.nl/privkey.pem
          protocols: TLSv1.2 TLSv1.1 TLSv1
          # ssl_dhparam: /etc/ssl/certs/dhparam.pem
          ssl_ciphers: "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4 "
        reverse_proxy:
          locations:
            backend:
              location: /
              proxy_pass: http://localhost:9000
              proxy_set_headers:
                header_host:
                  name: Host
                  value: $host
                header_x_real_ip:
                  name: X-Real-IP
                  value: $remote_addr
                header_x_forwarded_for:
                  name: X-Forwarded-For
                  value: $proxy_add_x_forwarded_for
                header_x_forwarded_proto:
                  name: X-Forwarded-Proto
                  value: $scheme

  pre_tasks:
    - name: Ensure pip is installed
      package:
        name: python3-pip

    - name: Ensure Docker bindings are installed
      pip:
        name: docker

  roles:
    # - role: geerlingguy.docker
    - role: geerlingguy.postgresql
    - role: zabbix
    - role: geerlingguy.certbot
    - role: nginxinc.nginx
